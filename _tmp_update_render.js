from pathlib import Path
text = Path('src/main.js').read_text(encoding='utf-8')
old = "    const actions = document.createElement('div');\n    actions.className = 'message__actions';\n\n    const deleteButton = document.createElement('button');\n    deleteButton.type = 'button';\n    deleteButton.className = 'message__actions-button';\n    deleteButton.innerHTML = `${createIcon('trash')} Eliminar`\n    deleteButton.addEventListener('click', () => {\n      message.attachments = message.attachments.filter((item) => item.id !== attachment.id);\n      markGroupAsUpdated(group);\n      renderMessages(group);\n      updateMessageMeta(group);\n      scheduleSave();\n    });\n    actions.appendChild(deleteButton);\n\n    header.appendChild(actions);\n"
if old not in text:
    raise SystemExit('original actions block not found')
new = "    const actions = document.createElement('div');\n    actions.className = 'message__actions';\n\n    const copyButton = document.createElement('button');\n    copyButton.type = 'button';\n    copyButton.className = 'message__actions-button';\n    copyButton.innerHTML = `${createIcon('copy')} Copiar`;\n    copyButton.addEventListener('click', () => {\n      if (navigator.clipboard && typeof navigator.clipboard.writeText === 'function') {\n        navigator.clipboard.writeText(textarea.value).catch((error) => {\n          console.warn('No se pudo copiar el mensaje al portapapeles', error);\n        });\n      } else {\n        try {\n          const temp = document.createElement('textarea');\n          temp.value = textarea.value;\n          temp.setAttribute('readonly', '');\n          temp.style.position = 'absolute';\n          temp.style.left = '-9999px';\n          document.body.appendChild(temp);\n          temp.select();\n          document.execCommand('copy');\n          document.body.removeChild(temp);\n        } catch (error) {\n          console.warn('No se pudo copiar el mensaje al portapapeles', error);\n        }\n      }\n    });\n    actions.appendChild(copyButton);\n\n    const deleteButton = document.createElement('button');\n    deleteButton.type = 'button';\n    deleteButton.className = 'message__actions-button';\n    deleteButton.innerHTML = `${createIcon('trash')} Eliminar`\n    deleteButton.addEventListener('click', () => {\n      message.attachments = message.attachments.filter((item) => item.id !== attachment.id);\n      markGroupAsUpdated(group);\n      renderMessages(group);\n      updateMessageMeta(group);\n      scheduleSave();\n    });\n    actions.appendChild(deleteButton);\n\n    header.appendChild(actions);\n"
text = text.replace(old, new, 1)
if 'createIcon(\'copy\')' not in text:
    icon_insert = "  if (name === 'copy') {\n    return `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M8.25 7.5v12a.75.75 0 00.75.75h9.75a.75.75 0 00.75-.75V9.75L16.5 6.75h-7.5a.75.75 0 00-.75.75z\" />\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 6.75V4.5a.75.75 0 00-.75-.75h-9a.75.75 0 00-.75.75V16.5a.75.75 0 00.75.75H6\" />\n      </svg>\n    `;\n  }\n"\n    text = text.replace("  if (name === 'trash') {\n    return `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" width=\"16\" height=\"16\">\n", icon_insert + "  if (name === 'trash') {\n    return `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" width=\"16\" height=\"16\">\n")
Path('src/main.js').write_text(text, encoding='utf-8')
